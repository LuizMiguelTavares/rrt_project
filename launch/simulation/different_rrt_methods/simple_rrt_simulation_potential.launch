<launch>
    <arg name="x_goal" default="2.25" />
    <arg name="y_goal" default="-1" />

    <arg name="world_frame" default="map" />
    <arg name="robot_frame" default="base_link" />
    <arg name="cmd_vel_topic" default="/cmd_vel" />
    <arg name="path_topic" default="/rrt_path" />
    <arg name="control_path_topic" default="/rrt_path" />
    <arg name="pose_topic" default="/vrpn_client_node/L1/pose" />
    <arg name="control_point_offset" default="0.1" />
    <arg name="laser_topic" default="/laser/scan" />

    <node pkg="rrt_project" type="emergency_button.py" name="emergency_button" output="screen" required="true" />

    <node pkg="rrt_project" type="global_rrt" name="global_rrt" output="screen">
        <rosparam file="$(find rrt_project)/config/simulation/rrt.yaml" command="load" />
        <param name="robot_frame" value="$(arg robot_frame)" />
        <param name="world_frame" value="$(arg world_frame)" />
        <param name="path_topic" value="$(arg path_topic)" />
        <param name="x_goal" value="$(arg x_goal)" />
        <param name="y_goal" value="$(arg y_goal)" />
        <param name="rate" value="1.0" />
        <param name="bezier_distance" value="0.1" />
    </node>

    <!-- Control and potential nodes -->
    <node pkg="rrt_project" type="differential_control" name="limo_control_node" output="screen">
        <param name="path_topic" value="$(arg control_path_topic)" />
        <param name="pose_topic" value="$(arg pose_topic)" />
        <param name="world_frame" value="$(arg world_frame)" />
        <param name="a" value="$(arg control_point_offset)" />
        <param name="robot_control_topic" value="$(arg cmd_vel_topic)"/>
        <param name="reference_velocity" value="0.12" />

        <param name="gains/x" type="double" value="1"/>
        <param name="gains/y" type="double" value="1"/>

        <param name="obs_filter_gain" value="0.3"/>
        <param name="filter_gain" value="1.0"/>
        <param name="control_frequency" value="30.0"/>
    </node>

    <node pkg="rrt_project" type="obstacle_avoidance" name="obstacle_avoidance_node" output="screen">
        <param name="num_clusters" value="12"/>
        <param name="use_angle_filter" value="true"/>
        <param name="angle_filter_margin" value="0.3"/>

        <param name="filter_type" value="0"/>
        <param name="filter_gain" value="0.8"/>

        <param name="robot_height" value="0.32"/>
        <param name="robot_width" value="0.27"/>
        <param name="x_offset" value="0.09"/>
        <param name="lidar_topic" value="$(arg laser_topic)"/>

        <param name="min_dist_threshold" value="0.3"/>

        <param name="obstacle_avoidance_n" value="2.0"/>
        <param name="obstacle_avoidance_a" value="0.23"/>
        <param name="obstacle_avoidance_b" value="0.23"/>
        <param name="obstacle_avoidance_k" value="0.09"/>
        <param name="obstacle_avoidance_lambda" value="0.001"/>
        <param name="potential_gain" value="1.0"/>

        <param name="saturate_potential" value="0.15"/>
    </node>

    <node name="traveled_path" pkg="rrt_project" type="publish_robot_traveled_path.py" output="screen">
        <param name="pose_topic" value="$(arg pose_topic)" />
        <param name="rate" value="10"/>
    </node>
</launch>