<launch>

    <!-- These are the arguments you can pass this launch file -->
    <arg name="paused" default="false" />
    <arg name="use_sim_time" default="true" />
    <arg name="gui" default="true" />
    <arg name="headless" default="false" />
    <arg name="debug" default="false" />
    <arg name="world" default="walk" />

    <!-- Include empty world from gazebo_ros with specified arguments -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find gazebo_ros)/worlds/empty_world.world" />
        <arg name="debug" value="$(arg debug)" />
        <arg name="gui" value="$(arg gui)" />
        <arg name="paused" value="$(arg paused)" />
        <arg name="use_sim_time" value="$(arg use_sim_time)" />
        <arg name="headless" value="$(arg headless)" />
    </include>

    <!-- Load the URDF into the ROS Parameter Server -->
    <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find p3dx_description)/urdf/pioneer3dx.xacro'" />

    <!-- Spawn a model from SDF -->
    <node pkg="gazebo_ros" type="spawn_model" name="spawn_obstacles" args="-file $(find rrt_project)/worlds/simple_map_big2/model.sdf -sdf -model my_custom_model -y 0 -x 0" output="screen"/>
    <node pkg="gazebo_ros" type="spawn_model" name="spawn_my_model" args="-file $(find rrt_project)/worlds/simple_map_big/model.sdf -sdf -model my_custom_model2 -y 0 -x 0" output="screen"/>
    <!-- Spawn a URDF robot -->
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
          respawn="false" output="screen" args="-urdf -model p3dx -param robot_description -y -5.5 -x -5.5" />

    <node name="slam_gmapping" pkg="gmapping" type="slam_gmapping" output="screen">
        <remap from="scan" to="/laser/scan"/>
        <param name="base_frame" value="base_link"/>
        <param name="odom_frame" value="odom"/>
        <param name="map_frame" value="map"/>
        <param name="xmin" value="-8"/>
        <param name="xmax" value="8"/>
        <param name="ymin" value="-8"/>
        <param name="ymax" value="8"/>
    </node>
    
    <!-- Launch rviz -->
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find rrt_project)/rviz/mapping.rviz" required="true" />

    <!-- Launch state publishers -->
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

</launch>
