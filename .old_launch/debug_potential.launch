<launch>

    <!-- These are the arguments you can pass this launch file -->
    <arg name="paused" default="false" />
    <arg name="use_sim_time" default="true" />
    <arg name="gui" default="true" />
    <arg name="headless" default="false" />
    <arg name="debug" default="false" />
    <arg name="world" default="walk" />

    <!-- Include empty world from gazebo_ros with specified arguments -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find gazebo_ros)/worlds/empty_world.world" />
        <arg name="debug" value="$(arg debug)" />
        <arg name="gui" value="$(arg gui)" />
        <arg name="paused" value="$(arg paused)" />
        <arg name="use_sim_time" value="$(arg use_sim_time)" />
        <arg name="headless" value="$(arg headless)" />
    </include>

    <!-- Load the URDF into the ROS Parameter Server -->
    <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find p3dx_description)/urdf/pioneer3dx.xacro'" />

    <!-- Spawn a URDF robot -->
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
          respawn="false" output="screen" args="-urdf -model p3dx -param robot_description -y 1 -x 1.5" />

    <include file="$(find rpic_article)/launch/route.launch">
    </include>
<!-- 
    <node pkg="rpic_article" type="publish_robot_points_pose.py" name="publish_robot_points" output="screen">
            <rosparam file="$(find rpic_article)/config/differential_robots/pioneer.yaml" command="load" />
            <rosparam file="$(find rpic_article)/config/obstacle_avoidance/obstacle_avoidance_scan_node.yaml" command="load" />
            <param name="robot_density" value="100"/>
            <param name="robot_height" value="0.5"/>
            <param name="robot_width" value="0.46"/>
            <param name="x_offset" value="-0.142"/>
            <param name="y_offset" value="0.0"/>
    </node>

    <node pkg="rpic_article" type="plot_2D.py" name="plot_2D" output="screen">
            <rosparam file="$(find rpic_article)/config/obstacle_avoidance/obstacle_avoidance_scan_node.yaml" command="load" />
            <param name="scan_topic" value="/laser/scan"/>
    </node> -->

    <!-- Launch state publishers -->
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

</launch>
